== Crypto Monitoring
A little POC I've thrown together to show some of the basics of the Openshift 4.x monitoring stack. https://docs.openshift.com/container-platform/4.5/monitoring/monitoring-your-own-services.html

- Sample configuration for the User Workload monitoring stack which is in tech preview, eg data retention, and persistent storage claim size etc.
- small ruby app that has a /metrics endpoint, and 2 gauge metrics being exported
- Prometheus ServiceMonitor to monitor the service
- Prometheus PrometheusRule to fire based on those metrics
- Seems I can't add example Grafana GrafanaDashboards, as the Grafana instance which is shipped in the Openshift monitoring stack, is read-only and only available for infra dashboards.
- Potential solution will be to use the Grafana operator: https://operatorhub.io/operator/grafana-operator / https://github.com/integr8ly/grafana-operator/


=== Coinbase API
Docs: https://developers.coinbase.com/api/v2

----
curl https://api.coinbase.com/v2/prices/BTC-EUR/spot
{"data":{"base":"BTC","currency":"EUR","amount":"8882.40801808"}}

curl https://api.coinbase.com/v2/prices/ETH-EUR/spot
{"data":{"base":"ETH","currency":"EUR","amount":"193.34586846"}}
----



----
$ curl localhost:8080/metrics
# HELP crypto_btc_eur The spot price of Bitcoin in Euro
# TYPE crypto_btc_eur gauge
crypto_btc_eur{currency1="Bitcoin", ticker1="BTC", currency2="Euro", ticker2="€", exchange="Coinbase", result="succeeded"} 8078.474036225
# HELP crypto_eth_eur The spot price of Ethereum in Euro
# TYPE crypto_eth_eur gauge
crypto_eth_eur{currency1="Ethereum", ticker1="ETH", currency2="Euro", ticker2="€", exchange="Coinbase", result="succeeded"} 201.329387355
----
